<%- include('partials/header') %>
<!-- Main container for the full-screen map -->
<div class="relative h-[calc(100vh-4rem)] w-full"> 
    
    <!-- The map itself, positioned to fill the container -->
    <div id="map" class="absolute inset-0"></div>
         <!-- The welcome message, overlaid on top of the map -->
        <div class="absolute top-4 left-4 z-10 max-w-sm">
            <div class="bg-white p-4 rounded-lg shadow-lg">
                <h1 class="text-xl font-bold text-gray-800">Map Dashboard</h1>
                <h2 class="text-md text-gray-600 mt-1">Welcome, <span class="font-semibold text-indigo-600"><%= username %></span>!</h2>
                <p class="text-xs text-gray-500 mt-2">Click anywhere on the map to add a waypoint.</p>
            </div>
        </div>
        <script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
            ({key: "<%= googleMapsApiKey %>", v: "weekly"});
        </script>
    </div>
</div>

<script>
    // Initialize and add the map
    let map, infoWindow;

    async function initMap() {
        // Request needed libraries.
        const { Map } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        // Default position (fallback if geolocation fails)
        let position = { lat: -34.397, lng: 150.644 };
        let zoom = 6;

        // Try to get user's current location immediately
        if (navigator.geolocation) {
            try {
                const userPosition = await new Promise((resolve, reject) => {
                    navigator.geolocation.getCurrentPosition(resolve, reject, {
                        enableHighAccuracy: true,
                        timeout: 10000,
                        maximumAge: 60000
                    });
                });
                
                position = {
                    lat: userPosition.coords.latitude,
                    lng: userPosition.coords.longitude
                };
                zoom = 15; // Closer zoom for user's location
                
            } catch (error) {
                console.warn('Could not get user location:', error.message);
                // Keep default position and zoom
            }
        }

        // Create the map
        map = new Map(document.getElementById("map"), {
            center: position,
            zoom: zoom,
            mapId: "DEMO_MAP_ID",
        });

        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);

    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation.",
        );
        infoWindow.open(map);
    }

    // Initialize the map when the page loads
    initMap();
</script>

<%- include('partials/footer') %>
